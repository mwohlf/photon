<?xml version="1.0"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
		http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd
	">

	<!-- see: http://jogamp.org/wiki/index.php/Maven -->

	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>net.wohlfart.photon</groupId>
		<artifactId>photon</artifactId>
		<version>0.0.1-SNAPSHOT</version>
	</parent>
	<artifactId>photon-android</artifactId>
	<packaging>apk</packaging>

	<properties>
		<android.sdk.path>/opt/android-sdk-linux/</android.sdk.path>
	</properties>

	<dependencies>
	    <dependency>
			<groupId>net.wohlfart.photon</groupId>
			<artifactId>photon-core</artifactId>
			<version>${photon.version}</version>
	    	<exclusions>
	    	    <!-- anything we can't use on android  -->
				<exclusion>
					<groupId>org.jogamp.jogl</groupId>
					<artifactId>jogl-all</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.jogamp.gluegen</groupId>
					<artifactId>gluegen-rt-main</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.jogamp.jogl</groupId>
					<artifactId>jogl-all-main</artifactId>
				</exclusion>
				<exclusion>
					<groupId>com.squareup.dagger</groupId>
					<artifactId>dagger-compiler</artifactId>
				</exclusion>
				<exclusion>
					<groupId>com.squareup.dagger</groupId>
					<artifactId>dagger-compiler</artifactId>
				</exclusion>
				<exclusion>
					<groupId>ch.qos.logback</groupId>
					<artifactId>logback-classic</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		
	    
		<dependency>
			<groupId>net.wohlfart.photon</groupId>
			<artifactId>photon-main</artifactId>
			<version>${photon.version}</version>

			<!-- The photon-scene project depends on jogl-all in order to type-check/compile, 
				and therefore will be added as a transitive dependency of this project. However, 
				this is an Android package and wants to use the Android JOGL package. Obviously, 
				it's not possible to use both, so this exclusion tells Maven that the dependency 
				introduced by photon-scene on JOGL should be ignored. -->
			<exclusions>
				<exclusion>
					<groupId>org.jogamp.jogl</groupId>
					<artifactId>jogl-all</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.jogamp.gluegen</groupId>
					<artifactId>gluegen-rt-main</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.jogamp.jogl</groupId>
					<artifactId>jogl-all-main</artifactId>
				</exclusion>
				<exclusion>
					<groupId>com.squareup.dagger</groupId>
					<artifactId>dagger-compiler</artifactId>
				</exclusion>
				<exclusion>
					<groupId>com.squareup.dagger</groupId>
					<artifactId>dagger-compiler</artifactId>
				</exclusion>
				<exclusion>
					<groupId>ch.qos.logback</groupId>
					<artifactId>logback-classic</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>com.github.tony19</groupId>
			<artifactId>logback-android-core</artifactId>
			<version>1.1.1-2</version>
		</dependency>

		<dependency>
			<groupId>com.github.tony19</groupId>
			<artifactId>logback-android-classic</artifactId>
			<version>1.1.1-2</version>
		</dependency>

		<dependency>
			<groupId>com.google.android</groupId>
			<artifactId>android</artifactId>
			<version>2.2.1</version>
			<scope>provided</scope>
		</dependency>

		<!-- Depend on the gluegen runtime Android package -->
		<dependency>
			<groupId>org.jogamp.gluegen</groupId>
			<artifactId>gluegen-rt-android</artifactId>
			<version>${jogl.version}</version>
		</dependency>

		<!-- Depend on the correct natives for Android -->
		<dependency>
			<groupId>org.jogamp.gluegen</groupId>
			<artifactId>gluegen-rt</artifactId>
			<version>${jogl.version}</version>
			<classifier>natives-android-armv6</classifier>
		</dependency>

		<!-- Depend on the jogl Android package -->
		<dependency>
			<groupId>org.jogamp.jogl</groupId>
			<artifactId>jogl-all-android</artifactId>
			<version>${jogl.version}</version>
		</dependency>

		<!-- Depend on the correct natives for Android -->
		<dependency>
			<groupId>org.jogamp.jogl</groupId>
			<artifactId>jogl-all</artifactId>
			<version>${jogl.version}</version>
			<classifier>natives-android-armv6</classifier>
			<scope>runtime</scope>
		</dependency>

	</dependencies>

	<build>
		<finalName>${project.artifactId}</finalName>

		<plugins>

			<!-- First, it's necessary to unpack the native libraries from the JOGL 
				and GlueGen jar files, into the correct "libs" directory. The "libs" directory 
				is then processed by the Android Maven plugin and placed in the correct location 
				in the APK for use. Then, it's necessary to unpack assets from the JOGL jar 
				file into the "assets" directory. This directory is then processed by the 
				Android Maven plugin, as expected. -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>2.8</version>
				<executions>

					<!-- Unpack the JOGL natives -->
					<execution>
						<id>unpack-jogl-natives</id>
						<phase>generate-resources</phase>
						<goals>
							<goal>unpack</goal>
						</goals>
						<configuration>
							<artifactItems>
								<artifactItem>
									<groupId>org.jogamp.jogl</groupId>
									<artifactId>jogl-all</artifactId>
									<version>${jogamp.version}</version>
									<classifier>natives-android-armv6</classifier>
									<overWrite>true</overWrite>
									<outputDirectory>${project.basedir}/libs/armeabi</outputDirectory>
									<includes>lib*.so</includes>
								</artifactItem>
							</artifactItems>
						</configuration>
					</execution>

					<!-- Unpack the JOGL assets -->
					<!-- In other words, copy anything from the jar file that isn't a class 
						file -->
					<execution>
						<id>unpack-jogl-assets</id>
						<phase>generate-resources</phase>
						<goals>
							<goal>unpack</goal>
						</goals>
						<configuration>
							<artifactItems>
								<artifactItem>
									<groupId>org.jogamp.jogl</groupId>
									<artifactId>jogl-all-android</artifactId>
									<version>${jogamp.version}</version>
									<overWrite>true</overWrite>
									<outputDirectory>${project.basedir}/assets</outputDirectory>
									<excludes>**/*.class</excludes>
								</artifactItem>
							</artifactItems>
						</configuration>
					</execution>

					<!-- Unpack the GlueGen natives -->

					<execution>
						<id>unpack-gluegen-natives</id>
						<phase>generate-resources</phase>
						<goals>
							<goal>unpack</goal>
						</goals>
						<configuration>
							<artifactItems>
								<artifactItem>
									<groupId>org.jogamp.gluegen</groupId>
									<artifactId>gluegen-rt</artifactId>
									<version>${jogamp.version}</version>
									<classifier>natives-android-armv6</classifier>
									<overWrite>true</overWrite>
									<outputDirectory>${project.basedir}/libs/armeabi</outputDirectory>
									<includes>lib*.so</includes>
								</artifactItem>
							</artifactItems>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- Next, because there have been files unpacked to non-standard locations, 
				it's necessary to tell the "clean" plugin to delete the unpacked files (for 
				the sake of keeping things tidy). -->
			<plugin>
				<artifactId>maven-clean-plugin</artifactId>
				<version>2.5</version>
				<configuration>
					<filesets>
						<fileset>
							<directory>${project.basedir}/libs/armeabi</directory>
							<includes>
								<include>libgluegen-rt.so</include>
								<include>libnewt.so</include>
								<include>libjogl_mobile.so</include>
							</includes>
							<followSymlinks>false</followSymlinks>
						</fileset>

						<!-- Note that if you don't use the "assets" directory for anything 
							else in your project, you can probably just delete the whole thing, rather 
							than picking things carefully in the manner shown here. -->
						<fileset>
							<directory>${project.basedir}/assets</directory>
							<includes>
								<include>META-INF/**</include>
								<include>com/**</include>
								<include>jogl/**</include>
								<include>jogamp/**</include>
								<include>javax/**</include>
								<include>net/**</include>
							</includes>
							<followSymlinks>false</followSymlinks>
						</fileset>
					</filesets>
				</configuration>
			</plugin>


			<!-- The default behaviour for the Android Maven plugin is to attempt 
				to include everything that isn't a class file from every dependency jar. 
				Because we already manually included the assets and native libraries using 
				the "dependency" plugin above, it's necessary to tell the Android Maven plugin 
				to exclude the jar files matching the given patterns from the inclusion process. 
				This saves roughly 4mb of redundant files from being included in the final 
				APK, at the time of writing. -->
			<plugin>
				<groupId>com.jayway.maven.plugins.android.generation2</groupId>
				<artifactId>android-maven-plugin</artifactId>
				<version>3.9.0-rc.2</version>				
            	<configuration>                 
                	<manifest>
                    	<debuggable>true</debuggable>
                	</manifest>
                	<proguard>
                    	<config>proguard.cfg</config>
                    	<skip>false</skip>
                	</proguard>
                	<sdk>
                    	<platform>10</platform>
                	</sdk>
                	<test>
                    	<skip>true</skip>
                	</test>
                	<undeployBeforeDeploy>true</undeployBeforeDeploy>
            	</configuration>
            	<extensions>true</extensions>
				<executions>
					<execution>
						<goals>
							<goal>apk</goal>
						</goals>
						<configuration>
							<excludeJarResources>
								<excludeJarResource>dagger-compiler-.*\.jar$</excludeJarResource>
								<excludeJarResource>jogl-.*\.jar$</excludeJarResource>
								<excludeJarResource>gluegen-rt-.*\.jar$</excludeJarResource>
							</excludeJarResources>
						</configuration>
					</execution>
				</executions>
			</plugin>

		</plugins>

	</build>

</project>
